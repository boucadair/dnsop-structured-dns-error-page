



DNSOP WG                                                         D. Wing
Internet-Draft                                                    Citrix
Intended status: Standards Track                                T. Reddy
Expires: 3 April 2022                                             McAfee
                                                                 N. Cook
                                                            Open-Xchange
                                                            M. Boucadair
                                                                  Orange
                                                       30 September 2021


                    Structured Data for Filtered DNS
             draft-wing-dnsop-structured-dns-error-page-01

Abstract

   DNS filtering is widely deployed for network security, but filtered
   DNS responses lack information for the end user to understand the
   reason for the filtering.  Existing mechanisms to provide detail to
   end users cause harm especially if the blocked DNS response is to an
   HTTPS website.

   This document defines a mechanism to explain the reason for the DNS
   filtering and offer an HTTPS URIs to get more detail.  This
   information can be parsed by the client and displayed, logged, or
   other purposes.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 3 April 2022.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.



Wing, et al.              Expires 3 April 2022                  [Page 1]

Internet-Draft            Data for Filtered DNS           September 2021


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.  Structured Error EDNS(0) Option Code  . . . . . . . . . . . .   4
   4.  Structured JSON . . . . . . . . . . . . . . . . . . . . . . .   5
   5.  Protocol Operation  . . . . . . . . . . . . . . . . . . . . .   6
     5.1.  Requestor Operation . . . . . . . . . . . . . . . . . . .   6
     5.2.  Responder Operation . . . . . . . . . . . . . . . . . . .   6
   6.  Example . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8
   9.  Changes . . . . . . . . . . . . . . . . . . . . . . . . . . .   9
     Changes from 00 to 01 . . . . . . . . . . . . . . . . . . . . .   9
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  10
     10.2.  Informative References . . . . . . . . . . . . . . . . .  10
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11

1.  Introduction

   DNS filters are deployed for a variety of reasons including endpoint
   security, parental filtering, and filtering required by law
   enforcement.  Network-based security solutions such as firewalls and
   Intrusion Prevention Systems (IPS) rely upon network traffic
   inspection to implement perimeter-based security policies and operate
   by filtering DNS responses.  In a home, DNS filtering is used for the
   same reasons as above and additionally for parental control.
   Internet Service Providers typically block access to some DNS domains
   due to a requirement imposed by an external entity (e.g., law
   enforcement agency) also performed using DNS-based content filtering.











Wing, et al.              Expires 3 April 2022                  [Page 2]

Internet-Draft            Data for Filtered DNS           September 2021


   Users of DNS services which perform filtering may wish to receive
   more information about such filtering to resolve problems with the
   filter -- for example to contact the administrator to whitelist a
   domain that was erroneously filtered or to understand the reason a
   particular domain was filtered.  With that information, the user can
   choose another network, open a trouble ticket with the DNS
   administrator to resolve erroneous filtering, log the information, or
   other uses.

   Two DNS filtering mechanisms are widely deployed today but are
   harmful:

   empty answer or NXDOMAIN:  The simplest mechanism is simply returning
      an empty answer or NXDOMAIN.  This provides no information to the
      client and makes the network or its DNS feel broken because of the
      'host not found' error messages typically presented to the user.
      This mechanism also interferes with client DNSSEC-validating DNS
      resolvers because the empty answer has an invalid (or missing)
      signature.

   Forged response:  This mechanism returns a forged A (or AAAA)
      response pointing at a host operated by the DNS operator.  The
      expectation is the user's browser will visit the server over HTTP
      and a suitable explanation will be displayed to the user.  As
      HTTPS is now commonplace, this expectaion breaks down because
      clients are presented with a warning about visiting an un-trusted
      site (because of an un-trusted certificate), or those users are
      encouraged to install the certificate as an additional trusted
      root, eroding their security for all TLS connections.
      Furthermore, for the user to see the DNS filtering explanation the
      user needs a web browser which visits the server and often require
      JavaScript, creating a wider attack surface.  The requirement for
      a web browser is, itself, a problem on some devices (e.g., IoT or
      headless devices).  Finally, this mechanism interferes with client
      DNSSEC-validating DNS resolvers because the forged response has an
      invalid (or missing) signature.

   For both DNS filtering mechanisms described above, the DNS server can
   return extended error codes Blocked, Censored, Filtered, or Forged
   Answer defined in Section 4 of [RFC8914], which that document states
   MUST be sent over Encrypted DNS channel.  However, these codes only
   explain that filtering occurred but lacks detail for the user to
   resolve the filtering.

   This document describes a protocol containing parsable data in a new
   EDNS(0) [RFC6891] option code.





Wing, et al.              Expires 3 April 2022                  [Page 3]

Internet-Draft            Data for Filtered DNS           September 2021


   Clients indicate their support of this specification in their DNS
   query so the DNS server can tailor its DNS response accordingly.  The
   information returned in a DNS response allows combinations of
   headless devices (i.e., those lacking a display or other means to
   communicate with a human), operating systems, and web browsers to be
   informed of the filtering.  This information returned can be logged
   and/or displayed to the user, as appropriate for the user interface
   capabilities of the client hardware and software.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119][RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This document uses terms defined in DNS Terminology [RFC8499].

   "Requestor" refers to the side that sends a request.  "Responder"
   refers to an authoritative, recursive resolver or other DNS component
   that responds to questions.  Other terminology is used here as
   defined in the RFCs cited by this document.

   "Encrypted DNS" refers to any encrypted scheme to convey DNS
   messages, for example, DNS-over-HTTPS [RFC8484], DNS-over-TLS
   [RFC7858], or DNS-over-QUIC [I-D.ietf-dprive-dnsoquic].

3.  Structured Error EDNS(0) Option Code

   This document defines a new EDNS(0) [RFC6891] option code (OPT) to
   include JSON providing information in the DNS response describing
   filtering that occurred for this query, defined in Figure 1.

                                                1   1   1   1   1   1
        0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
      |           STRUCTURED-ERROR-LENGTH (fixed, two octets)         |
      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
      /              STRUCTURED-ERROR-JSON (variable size)            /
      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

               Figure 1: Structured Error EDNS(0) Option Code

   The description of the fields is as follows:

   STRUCTURED-ERROR-LENGTH:  Two octets containing the length of
      STRUCTURED-ERROR-JSON, in octets.  It MUST NOT be set to 0.



Wing, et al.              Expires 3 April 2022                  [Page 4]

Internet-Draft            Data for Filtered DNS           September 2021


   STRUCTURED-ERROR-JSON:  JSON containing DNS filtering information
      encoded in JSON, defined in Section 4.

4.  Structured JSON

   STRUCTURED-ERROR-JSON has one top-level name, "p" (party
   responsible), containing an array of dictionaries for each party
   responsible for filtering this particular DNS response.  An array of
   responsible parties are possible in deployment scenarios where two or
   more entities are involved in a DNS filtering (the filtering may be
   for the same or distinct reasons by each involved DNS filter
   service).  The content of the "p" array is structured as follows:

   c: (complaint)  a partial HTTPS URI for the user to report mis-
      classified DNS filtering.  This field is mandatory and MUST
      contain a URI.  The endpoint adds a query parameter to this URI,
      described below.  There are constraints on this URI described in
      Security Considerations.  This field might or might not already
      contain an HTTP query parameter.  This field is required.

   j: (justification)  the textual justification for this particular DNS
      filtering.  This field is optional.

   o: (organization)  human-friendly name of the organization that
      filtered this particular DNS query.  This field is optional.

   r: (regulation)  a partial HTTPS URI to retrieve the public or
      private regulation for the filter.  This might point at an
      employment agreement (for an enterprise performing filtering) or a
      national government regulation (for an ISP performing filtering).
      To this URI, the endpoint adds a query parameter, described below.
      There are constraints on this URI described in Security
      Considerations.  This field might or might not already contain an
      HTTP query parameter.  This field is optional.

   To reduce the size of the JSON, two of the JSON fields, "c" and r",
   contain partial URIs when sent over the wire.  The client endpoint
   adds a query parameter to both of those URIs containing the DNS query
   class (class=), resource record type (type=), and name (name=), which
   are all contained in the DNS response.  With that addition, the URIs
   are considered fully-formed.

      |  Discussion: Can Class=IN be assumed, or should it be part of
      |  the fully-formed URI?

   To avoid the overhead associated with DNS trunction, the generated
   JSON SHOULD be as short as possible utilizing short domain names,
   concise text, and minified JSON.



Wing, et al.              Expires 3 April 2022                  [Page 5]

Internet-Draft            Data for Filtered DNS           September 2021


   The JSON data can be parsed to display to the user, logged, or
   otherwise used to assist the end-user or IT staff with
   troubleshooting and diagnosing the cause of the DNS filtering.

      |  Discussion: We might consider compressing the JSON.  Using the
      |  example below, minified JSON is 171 bytes, binary output from
      |  brotli is 108 bytes (36% reduction), gzip is 148 bytes (13%
      |  reduction), and base64-encoded brotli is 145 bytes (15%
      |  reduction).  [RFC3363] discusses problems with binary labels.

5.  Protocol Operation

5.1.  Requestor Operation

   When generating a DNS query, the client MUST include the Structured
   Error EDNS(0) option so the DNS server knows the client is compliant
   with this specification.

5.2.  Responder Operation

   When the DNS server filters its DNS response to an A or AAAA record
   query, the DNS response MAY contain an empty answer, NXDOMAIN, or a
   forged A or AAAA response, as desired by the DNS server.  In
   addition, if the query contained the Structured Error EDNS(0) option,
   the DNS server MAY return more detail in the STRUCTURED-ERROR-JSON,
   as described below.

   Over time a domain name might be filtered, then not filtered, then
   filtered again.  Addtionally, the user might take minutes or even
   days before investigating a filtered DNS query.  Thus the URI is
   RECOMMENDED to include sufficient detail to determine the filtering
   state when the DNS filtering occurred.  If and how this is encoded
   into the URI is an implementation decision.

      |  Discussion: the text in the justification field ("j") may not
      |  be in the user's preferred language.  Sending a language tag
      |  [RFC5646] in the OPT-DATA (Section 6.1.2 of [RFC6891]) would
      |  resolve this problem.  This has privacy implications.

6.  Example

   The example uses the folding defined in [RFC8792] for long lines.

   An example showing example.net that has filtered a DNS "A" record
   query for example.org is shown in Figure 2, below.






Wing, et al.              Expires 3 April 2022                  [Page 6]

Internet-Draft            Data for Filtered DNS           September 2021


     {
       "c": "https://mistakes.example.net?time=1621902483",
       "j": "malware present for 23 days",
       "o": "example.net Filtering Service",
       "r": "https://laws.example.net?country=atlantis"
     }

       Figure 2: Example of JSON returned in EDNS(0) Structured Error
                                  response

   Upon receipt, the two partial URIs ("c" and "r") are extended to
   become fully-formed URIs.  The class, type, and name are pulled from
   the DNS response (which matches the associated query) so that the
   fully-formed "c" URI becomes https://mistakes.example.net?time=162190
   2483&class=in&type=a&name=example.org and the "r" URI becomes https:/
   /laws.example.net?country=atlantis&class=in&type=a&name=example.org.

7.  Security Considerations

   Security considerations in Section 6 of [RFC8914] and [RFC8624] need
   to be taken into consideration.

   The "c" and "r" URIs returned in the DNS response may cause HTTPS
   retrieval by the client, or by another party (e.g., IT staff).  To
   reduce attack surface, the Structed Error EDNS(0) option MUST only be
   processed by the client if the DNS query and response were both sent
   over an encrypted DNS channel to a DNS server authorized by the
   client; otherwise it MUST be ignored.

   The "c" and "r" URIs returned in the DNS response MUST match the
   domain name of the encrypted DNS server.  This validation ensures
   both the encrypted DNS server and the HTTPS server are operated by
   the same entity.  This matching is performed by allowing the left-
   most FQDN label to differ, but the other labels MUST match.  For
   example, ns.example.com and web.example.com would match, whereas
   ns.com and web.com would not match.

      |  The example in the last sentence, above, doesn't work.  Do we
      |  need to point at Mozilla's domain name list?  Seems so...

   If the web server responding to "c" or "r" URIs web server desires,
   it can HTTP redirect the request elsewhere,such as might be common
   for "r" to point the user at a government-owned domain explaining
   government-mandated filtering.  To improve privacy of such
   redirection, unnecessary query parameters MUST be stripped by the
   HTTP server from the HTTP target URL.





Wing, et al.              Expires 3 April 2022                  [Page 7]

Internet-Draft            Data for Filtered DNS           September 2021


   Because this specification still allows DNS filtering to respond with
   an empty answer, NXDOMAIN, or forged answer (as the DNS server sees
   fit), this specification remains incompatible with client-based
   DNSSEC validation.  However, it is possible to maintain compatibility
   with DNSSEC by returnin the real (unfiltered) answer with its DNSSEC
   signature intact.  By also returning the EDNS(0) Structured Error,
   the DNS requestor can be informed of the filtering (from the DNS
   responder).  Depending on the threat model, network- and/or host-
   based IP filters or alerts can ensure the DNS requestor does not use
   the DNS response.

8.  IANA Considerations

   This document requests IANA to register the "application/
   json+structured-dns-error" media type in the "Media Types" registry
   [IANA-MediaTypes].  This registration follows the procedures
   specified in [RFC6838]:


































Wing, et al.              Expires 3 April 2022                  [Page 8]

Internet-Draft            Data for Filtered DNS           September 2021


      Type name: application

      Subtype name: json+structured-dns-error

      Required parameters: N/A

      Optional parameters: N/A

      Encoding considerations: as defined in Section 3 of [RFCXXXX].

      Security considerations: See Section 7 of [RFCXXXX].

      Interoperability considerations: N/A

      Published specification: [RFCXXXX]

      Applications that use this media type: Section 3 of [RFCXXXX].

      Fragment identifier considerations: N/A

      Additional information: N/A

      Person & email address to contact for further information: IETF,
         iesg@ietf.org

      Intended usage: COMMON

      Restrictions on usage: none

      Author: See Authors' Addresses section.

      Change controller: IESG

      Provisional registration?  No


9.  Changes

   This section is to be removed before publishing as an RFC.

   [RFC Editor: remove this section]

Changes from 00 to 01

   *  Removed support for multiple responsible parties

   *  one-character JSON names (to minimize JSON length)




Wing, et al.              Expires 3 April 2022                  [Page 9]

Internet-Draft            Data for Filtered DNS           September 2021


   *  partially-formed URI converted to fully-formed URI by client (to
      minimize JSON length)

10.  References

10.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC6838]  Freed, N., Klensin, J., and T. Hansen, "Media Type
              Specifications and Registration Procedures", BCP 13,
              RFC 6838, DOI 10.17487/RFC6838, January 2013,
              <https://www.rfc-editor.org/info/rfc6838>.

   [RFC6891]  Damas, J., Graff, M., and P. Vixie, "Extension Mechanisms
              for DNS (EDNS(0))", STD 75, RFC 6891,
              DOI 10.17487/RFC6891, April 2013,
              <https://www.rfc-editor.org/info/rfc6891>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8624]  Wouters, P. and O. Sury, "Algorithm Implementation
              Requirements and Usage Guidance for DNSSEC", RFC 8624,
              DOI 10.17487/RFC8624, June 2019,
              <https://www.rfc-editor.org/info/rfc8624>.

10.2.  Informative References

   [I-D.ietf-dprive-dnsoquic]
              Huitema, C., Dickinson, S., and A. Mankin, "Specification
              of DNS over Dedicated QUIC Connections", Work in Progress,
              Internet-Draft, draft-ietf-dprive-dnsoquic-04, 3 September
              2021, <https://datatracker.ietf.org/doc/html/draft-ietf-
              dprive-dnsoquic-04>.

   [IANA-MediaTypes]
              IANA, "Media Types",
              <https://www.iana.org/assignments/media-types>.








Wing, et al.              Expires 3 April 2022                 [Page 10]

Internet-Draft            Data for Filtered DNS           September 2021


   [RFC3363]  Bush, R., Durand, A., Fink, B., Gudmundsson, O., and T.
              Hain, "Representing Internet Protocol version 6 (IPv6)
              Addresses in the Domain Name System (DNS)", RFC 3363,
              DOI 10.17487/RFC3363, August 2002,
              <https://www.rfc-editor.org/info/rfc3363>.

   [RFC5646]  Phillips, A., Ed. and M. Davis, Ed., "Tags for Identifying
              Languages", BCP 47, RFC 5646, DOI 10.17487/RFC5646,
              September 2009, <https://www.rfc-editor.org/info/rfc5646>.

   [RFC7858]  Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D.,
              and P. Hoffman, "Specification for DNS over Transport
              Layer Security (TLS)", RFC 7858, DOI 10.17487/RFC7858, May
              2016, <https://www.rfc-editor.org/info/rfc7858>.

   [RFC8484]  Hoffman, P. and P. McManus, "DNS Queries over HTTPS
              (DoH)", RFC 8484, DOI 10.17487/RFC8484, October 2018,
              <https://www.rfc-editor.org/info/rfc8484>.

   [RFC8499]  Hoffman, P., Sullivan, A., and K. Fujiwara, "DNS
              Terminology", BCP 219, RFC 8499, DOI 10.17487/RFC8499,
              January 2019, <https://www.rfc-editor.org/info/rfc8499>.

   [RFC8792]  Watsen, K., Auerswald, E., Farrel, A., and Q. Wu,
              "Handling Long Lines in Content of Internet-Drafts and
              RFCs", RFC 8792, DOI 10.17487/RFC8792, June 2020,
              <https://www.rfc-editor.org/info/rfc8792>.

   [RFC8914]  Kumari, W., Hunt, E., Arends, R., Hardaker, W., and D.
              Lawrence, "Extended DNS Errors", RFC 8914,
              DOI 10.17487/RFC8914, October 2020,
              <https://www.rfc-editor.org/info/rfc8914>.

Authors' Addresses

   Dan Wing
   Citrix Systems, Inc.
   United States of America

   Email: dwing-ietf@fuggles.com











Wing, et al.              Expires 3 April 2022                 [Page 11]

Internet-Draft            Data for Filtered DNS           September 2021


   Tirumaleswar Reddy
   McAfee, Inc.
   Embassy Golf Link Business Park
   Bangalore 560071
   Karnataka
   India

   Email: kondtir@gmail.com


   Neil Cook
   Open-Xchange
   United Kingdom

   Email: neil.cook@noware.co.uk


   Mohamed Boucadair
   Orange
   35000 Rennes
   France

   Email: mohamed.boucadair@orange.com




























Wing, et al.              Expires 3 April 2022                 [Page 12]
